{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/main/voice-service.ts","webpack:///./src/app/main/voice-translation-service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,mEAAmE,4C;;;;;;;;;;;;;;;;;ACAzB;AAO1C;IALA;QAME,UAAK,GAAG,eAAe,CAAC;IAC1B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAC2B;AACH;AAClB;AACO;AACgC;AACP;AACyB;AACjG,SAAS,iBAAiB,CAAC,IAAgB;IAChD,OAAO,IAAI,8EAAmB,CAAC,IAAI,CAAC,CAAC;AACvC,CAAC;AAiBD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,+DAAa;gBACb,uEAAa;gBACb,4FAAuB;gBACvB,iEAAe;gBACf,qEAAgB;gBAChB,mEAAiB;aAClB;YACD,SAAS,EAAE,CAAC,yFAAwB,CAAC;YACrC,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5BtB,8CAA8C,qBAAqB,8BAA8B,KAAK,mDAAmD,mX;;;;;;;;;;;ACAzJ,8VAA8V,cAAc,kC;;;;;;;;;;;;;;;;;;;;ACA1T;AACH;AACuB;AAG5B;AAW1C;IAME,uBAAoB,EAAgB,EAChB,GAA4B;QAD5B,OAAE,GAAF,EAAE,CAAc;QAChB,QAAG,GAAH,GAAG,CAAyB;QANhD,eAAU,GAAG,KAAK,CAAC;QAInB,iBAAY,GAAG,EAAE,CAAC;IAGF,CAAC;IAEjB,gCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,KAAK;YACtD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,SAAS,CAAC,UAAC,KAAK;YAC9D,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAChD,CAAC,CAAC;IACJ,CAAC;IACF,mCAAW,GAAX;QACG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;IAClB,CAAC;IACD,kCAAU,GAAV;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC;IACD,iCAAS,GAAT;QACE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IA7BU,aAAa;QARzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;YAEpC,SAAS,EAAE,CAAC,2DAAY;gBACrB,kFAAuB;gBACtB,2FAA0B,CAAC;;SAChC,CAAC;+EAOwB,2DAAY;YACX,kFAAuB;OAPrC,aAAa,CA8BzB;IAAD,oBAAC;CAAA;AA9ByB;;;;;;;;;;;;;;;;;;;;AChBkD;AACjC;AACZ;AAM/B;IAGI,sBAAmB,aAAuC;QAA1D,iBAMC;QANkB,kBAAa,GAAb,aAAa,CAA0B;QAF1D,YAAO,GAAG,EAAE,CAAC;QACb,kBAAa,GAAoB,IAAI,4CAAO,EAAU,CAAC;QAEnD,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,UAAC,CAAC;QAC7B,CAAC,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,UAAC,CAAC;YAC9B,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;QACjD,CAAC,CAAC;IACR,CAAC;IACD,4BAAK,GAAL;QACI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;IACD,2BAAI,GAAJ;QACI,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAhBQ,YAAY;QADxB,gEAAU,EAAE;+EAIyB,yFAAwB;OAHjD,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;ACPkB;AAEO;AACnB;AAG/B;IAEI,iCAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAD1C,uBAAkB,GAAoB,IAAI,4CAAO,EAAU,CAAC;IAG5D,CAAC;IACD,sCAAI,GAAJ;QAAA,iBASC;QARG,gBAAgB;QAChB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAM,GAAG,GAAG,eAAe,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAoB,oCAAoC,EAAE,EAAC,OAAO,EAAE,GAAG,EAAC,CAAC;aAC5F,SAAS,CAAC,UAAC,WAAW;YACnB,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CAAC;IAEN,CAAC;IACD,2CAAS,GAAT,UAAU,OAAe;QAErB,wCAAwC;IAC5C,CAAC;IAED,gDAAc,GAAd,UAAe,QAAgB;IAE/B,CAAC;IACD,6CAAW,GAAX,UAAY,GAAW;QAAvB,iBAMC;QALG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAoB,oCAAoC,EAAE,EAAC,OAAO,EAAE,GAAG,EAAC,CAAC;aAC5F,SAAS,CAAC,UAAC,WAAW;YACnB,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CAAC;IACN,CAAC;IACD,4CAAU,GAAV,UAAW,GAAW;QAClB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAhCQ,uBAAuB;QADnC,gEAAU,EAAE;+EAGuB,+DAAU;OAFjC,uBAAuB,CAkCnC;IAAD,8BAAC;CAAA;AAlCmC;;;;;;;;;;;;;ACPpC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div class=\\\"container\\\" style=\\\"padding: 20px;\\\">\\n  <app-main> </app-main>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hackathon2019';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { MatCardModule, MatButtonModule, MatGridListModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RxSpeechRecognitionService, SpeechRecognitionService } from '@kamiazya/ngx-speech-recognition';\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent\r\n  ],\r\n  imports: [\r\n    MatCardModule,  \r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    HttpClientModule,\r\n    MatGridListModule\r\n  ],\r\n  providers: [SpeechRecognitionService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\r\\n.left-div , .right-div {\\r\\n    padding:50px;\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksWUFBWTtJQUNaLHFCQUFxQjtBQUN6QiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5sZWZ0LWRpdiAsIC5yaWdodC1kaXYge1xyXG4gICAgcGFkZGluZzo1MHB4O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"\\r\\n\\r\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"recordning\\\" (click)=\\\"startListen()\\\">Get Voice</button>\\r\\n      <button mat-raised-button  [disabled]=\\\"!recordning\\\" (click)=\\\"stopListen()\\\">Stop Voice</button>\\r\\n      <button mat-raised-button  (click)=\\\"translate()\\\">Translate</button>\\r\\n      <h2> {{translateMsg}}</h2>\\r\\n\\r\\n\\r\\n      \\r\\n      \"","import { Component, OnInit } from '@angular/core';\r\nimport { VoiceService } from './voice-service';\r\nimport { VoiceTranslationService } from './voice-translation-service';\r\nimport {\r\n  RxSpeechRecognitionService\r\n} from '@kamiazya/ngx-speech-recognition';\r\nimport { Subscription } from 'rxjs';\r\nimport { Translator } from 'angular-translator';\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css'],\r\n  providers: [VoiceService,\r\n     VoiceTranslationService,\r\n      RxSpeechRecognitionService]\r\n})\r\nexport class MainComponent implements OnInit {\r\n  recordning = false;\r\n  messageSub: Subscription;\r\n  message: string;\r\n  translateSub: Subscription;\r\n  translateMsg = '';\r\n  constructor(private vs: VoiceService, \r\n              private vts: VoiceTranslationService\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    this.messageSub = this.vs.messageChange.subscribe((value) => {\r\n      this.message = value;\r\n      this.vts.sendMessage(this.message);\r\n    })\r\n    this.translateSub = this.vts.translateMsgChange.subscribe((value) => {\r\n      this.translateMsg = this.translateMsg + value;\r\n    })\r\n  }\r\n startListen(): void {\r\n    this.recordning = true;\r\n    this.vs.start();\r\n  }\r\n  stopListen(): void {\r\n    this.recordning = false;\r\n    this.vs.stop();\r\n  }\r\n  translate(): void {\r\n    this.vts.exec();\r\n  }\r\n}\r\n","import { SpeechRecognitionService } from '@kamiazya/ngx-speech-recognition';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class VoiceService {\r\n    message = '';\r\n    messageChange: Subject<string> = new Subject<string>();\r\n    constructor(public speachService: SpeechRecognitionService) {\r\n        this.speachService.onstart = (e) => {\r\n          };\r\n          this.speachService.onresult = (e) => {\r\n            this.message = e.results[0].item(0).transcript;\r\n          };\r\n    }\r\n    start() {\r\n        this.speachService.start();\r\n    }\r\n    stop() {\r\n        this.speachService.stop();\r\n        this.messageChange.next(this.message);\r\n    }\r\n    \r\n}","import { Translator } from \"angular-translator\";\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class VoiceTranslationService {\r\n    translateMsgChange: Subject<String> = new Subject<String>();\r\n    constructor(private httpClient: HttpClient) {\r\n\r\n    }\r\n    exec() {\r\n        // skriv kod här\r\n        console.log('exec');\r\n        const msg = 'Where are you';\r\n        this.httpClient.post<{message: string}>('http://localhost:3000/post-message', {message: msg})\r\n        .subscribe((responsData)=> {\r\n            this.setMessage(responsData.message);\r\n        })\r\n\r\n    }\r\n    translate(message: string) {\r\n       \r\n        // kod för översättning från voice input\r\n    }\r\n\r\n    switchLanguage(language: string) {\r\n        \r\n    }\r\n    sendMessage(msg: string) {\r\n        console.log('sendMessage');\r\n        this.httpClient.post<{message: string}>('http://localhost:3000/post-message', {message: msg})\r\n        .subscribe((responsData)=> {\r\n            this.setMessage(responsData.message);\r\n        })\r\n    }\r\n    setMessage(msg: string) {\r\n        this.translateMsgChange.next(msg);\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}