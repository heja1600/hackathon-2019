{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/main/voice-service.ts","webpack:///./src/app/main/voice-translation-service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<div class=\\\"container\\\" style=\\\"padding: 20px;\\\">\\r\\n\\r\\n      <app-main> </app-main>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hackathon2019';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { MatCardModule, MatButtonModule, MatGridListModule, MatRadioGroup, MatRadioButton, MatRadioModule, MatExpansionModule, MatLabel, MatInputModule, MatSelectModule, MatIconModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RxSpeechRecognitionService, SpeechRecognitionService } from '@kamiazya/ngx-speech-recognition';\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent\r\n  ],\r\n  imports: [\r\n    MatInputModule,\r\n    MatCardModule,  \r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    HttpClientModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatExpansionModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatIconModule\r\n  ],\r\n  providers: [SpeechRecognitionService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\r\\n.left-div {\\r\\n    float: left;\\r\\n    width: 45%;\\r\\n}\\r\\n\\r\\n.right-div {\\r\\n    float: right;\\r\\n    width: 45%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksV0FBVztJQUNYLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFlBQVk7SUFDWixVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9tYWluL21haW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4ubGVmdC1kaXYge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogNDUlO1xyXG59XHJcblxyXG4ucmlnaHQtZGl2IHtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIHdpZHRoOiA0NSU7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"left-div\\\">\\r\\n\\r\\n\\r\\n      <br>\\r\\n\\r\\n      <!-- Output To Language -->\\r\\n      <mat-card>\\r\\n            <mat-form-field>\\r\\n                  <mat-label> Översätt till</mat-label>\\r\\n                  <br>\\r\\n                  <mat-select style=\\\"width:100%;\\\" matNativeControl (selectionChange)=\\\"translateTo($event)\\\">\\r\\n                        <mat-option *ngFor=\\\"let lang of languages\\\" [value]=\\\"lang.code\\\">{{lang.lang}}</mat-option>\\r\\n                  </mat-select>\\r\\n            </mat-form-field>\\r\\n      </mat-card>\\r\\n      <br>\\r\\n\\r\\n      <!-- Manual text field-->\\r\\n      <!--\\r\\n      <mat-form-field style=\\\"width: 100%\\\">\\r\\n            <input matInput placeholder=\\\"Skriv ord\\\" (click)=\\\"wordInput($event)\\\" #wordinput>\\r\\n      </mat-form-field>\\r\\n      -->\\r\\n\\r\\n      <br>\\r\\n\\r\\n      <!-- Buttons -->\\r\\n      <button style=\\\"padding:5px;width: 45%;\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"recording\\\" (click)=\\\"startListen()\\\">Get\\r\\n            Voice <mat-icon>phone</mat-icon></button>\\r\\n      <button style=\\\"padding:5px;width: 45%; float:right\\\" mat-raised-button color=\\\"warn\\\" [disabled]=\\\"!recording\\\" (click)=\\\"stopListen()\\\">Stop\\r\\n            Voice<mat-icon>phone_missed</mat-icon></button>\\r\\n      <!--\\r\\n      <button style=\\\"padding:20px\\\" mat-raised-button (click)=\\\"wordinput.click()\\\">Translate</button>\\r\\n                  -->\\r\\n      <br>\\r\\n      <br>\\r\\n\\r\\n      <!-- Input Voice-->\\r\\n      <!-- \\r\\n<p>Detected language: </p>\\r\\n      <p id=\\\"detectedLanguage\\\"></p>\\r\\n      -->\\r\\n      <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%\\\">\\r\\n            <mat-label>Voice Input</mat-label>\\r\\n            <input [disabled]=\\\"true\\\" [value]=\\\"message\\\" matInput>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n\\r\\n      <!-- Input Voice Translated-->\\r\\n      <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%\\\" class=\\\"temp\\\">\\r\\n            <mat-label>Translated Output</mat-label>\\r\\n            <textarea disabled [value]=\\\"translateMsg\\\" matInput></textarea>\\r\\n      </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"right-div\\\">\\r\\n\\r\\n      <p>Operator side</p>\\r\\n      <div class=\\\"input-group\\\" id=\\\"textareaOperator\\\">\\r\\n            <textarea id=\\\"textareaOperatorId\\\" class=\\\"form-control custom-control\\\" #inputWord (click)=\\\"wordInputText($event)\\\"rows=\\\"3\\\" value=\\\"\\\" style=\\\"resize:none\\\"></textarea>\\r\\n            <span class=\\\"input-group-addon btn btn-primary\\\" id=\\\"translateButton\\\" (click)=\\\"inputWord.click()\\\"><mat-icon>g_translate</mat-icon></span>\\r\\n      </div>\\r\\n\\r\\n      <br>\\r\\n\\r\\n      <p>Translated text</p>\\r\\n      <div class=\\\"input-group\\\" id=\\\"textareaTranslated\\\" >\\r\\n            <textarea [value]=\\\"typeMsg\\\" id=\\\"textareaTranslatedId\\\" class=\\\"form-control custom-control\\\" #say (click)=\\\"sayText($event)\\\" rows=\\\"3\\\" style=\\\"resize:none\\\"></textarea>\\r\\n            <span class=\\\"input-group-addon btn btn-primary\\\" id=\\\"synthesisSpeechButton\\\" (click)=\\\"say.click()\\\"><mat-icon>volume_up</mat-icon></span>\\r\\n            <textarea  disabled [value]=\\\"detectedLanguage\\\" style=\\\"width: 60px\\\"  class=\\\"form-control custom-control\\\"  rows=\\\"3\\\"></textarea>\\r\\n            <span class=\\\"input-group-addon btn btn-primary\\\" ><mat-icon>language</mat-icon></span>\\r\\n           \\r\\n      </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--\\r\\n          <div class=\\\"container\\\">\\r\\n                 \\r\\n            <h5> Voice Input</h5>\\r\\n            <textarea class=\\\"form-control custom-control input-group\\\" rows=\\\"3\\\" style=\\\"resize:none\\\">{{message}}</textarea>\\r\\n            <div [@answerAnim]=\\\"anim\\\">\\r\\n            <h5> Translated Voice</h5>\\r\\n            <textarea class=\\\"form-control custom-control input-group\\\" rows=\\\"3\\\" style=\\\"resize:none\\\">{{translateMsg}}</textarea>\\r\\n            </div>\\r\\n      </div>\\r\\n   <p>Raw speech-to-text</p>\\r\\n      <div class=\\\"input-group\\\" id=\\\"textareaTranslated\\\">\\r\\n            <textarea class=\\\"form-control custom-control\\\" rows=\\\"3\\\" style=\\\"resize:none\\\">{{message}}</textarea>\\r\\n      </div>\\r\\n\\r\\n      <br>\\r\\n\\r\\n      <p>Translated speech</p>\\r\\n      <div class=\\\"input-group\\\" id=\\\"textareaTranslated\\\">\\r\\n            <textarea class=\\\"form-control custom-control\\\" rows=\\\"3\\\" style=\\\"resize:none\\\">{{translateMsg}}</textarea>\\r\\n      </div>\\r\\n      <p>Select translated language</p>\\r\\n     \\r\\n\\r\\n</div>\\r\\n-->\\r\\n<!-- Input From Language -->\\r\\n<!--\\r\\n      <mat-card>\\r\\n            <mat-form-field>\\r\\n                  <mat-label> Översätt från</mat-label>\\r\\n                  <br>\\r\\n                  <mat-select style=\\\"width:100%;\\\" matNativeControl (selectionChange)=\\\"translateTo($event)\\\">\\r\\n                        <mat-option *ngFor=\\\"let lang of languages\\\" [value]=\\\"lang.code\\\">{{lang.lang}}</mat-option>\\r\\n                  </mat-select>\\r\\n\\r\\n            </mat-form-field>\\r\\n      </mat-card>\\r\\n      -->\\r\\n<!--\\r\\n\\r\\n\\r\\n<div class=\\\"right-div\\\">\\r\\n\\r\\n      <p>Operator side</p>\\r\\n      <div class=\\\"input-group\\\" id=\\\"textareaOperator\\\">\\r\\n            <textarea class=\\\"form-control custom-control\\\" rows=\\\"3\\\" style=\\\"resize:none\\\">Placeholder</textarea>\\r\\n            <span class=\\\"input-group-addon btn btn-primary\\\" id=\\\"translateButton\\\" onclick=\\\"textTranslate()\\\">Translate</span>\\r\\n      </div>\\r\\n\\r\\n      <br>\\r\\n\\r\\n      <p>Translated text</p>\\r\\n      <div class=\\\"input-group\\\" id=\\\"textareaTranslated\\\">\\r\\n            <textarea class=\\\"form-control custom-control\\\" rows=\\\"3\\\" style=\\\"resize:none\\\"></textarea>\\r\\n            <span class=\\\"input-group-addon btn btn-primary\\\" id=\\\"synthesisSpeechButton\\\">Synthesis speech</span>\\r\\n      </div>\\r\\n\\r\\n</div>\\r\\n-->\"","import { Component, OnInit } from '@angular/core';\r\nimport { VoiceService } from './voice-service';\r\nimport Speech from 'speak-tts';\r\nimport { VoiceTranslationService } from './voice-translation-service';\r\nimport {\r\n  RxSpeechRecognitionService\r\n} from '@kamiazya/ngx-speech-recognition';\r\nimport { Subscription } from 'rxjs';\r\nimport { Translator } from 'angular-translator';\r\nimport { Language } from '../shared/language';\r\nimport { trigger, style, state, animate, transition } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css'],\r\n  providers: [VoiceService,\r\n     VoiceTranslationService,\r\n      RxSpeechRecognitionService],\r\n  animations: [\r\n    trigger('answerAnim', [\r\n      state('active', style({\r\n\r\n      })),\r\n      state('inactive', style({\r\n\r\n      })),\r\n      transition('inactive <=> active', [\r\n        animate('0.2s')\r\n      ])\r\n    ])\r\n  ]\r\n})\r\n\r\n\r\nexport class MainComponent implements OnInit {\r\n  languages: Language[] = [\r\n    {lang:'Svenska', code: 'sv-SE'},\r\n    {lang:'Engelska', code: 'en-GB'},\r\n    {lang:'Tyska', code: 'de-DE'},\r\n    {lang:'Franska', code: 'fr-FR'},\r\n    {lang:'Afrikaans', code: 'af-ZA'},\r\n    {lang:'Spanska', code: 'es-ES'},\r\n    {lang:'Italienska', code: 'it-IT'},\r\n    {lang:'Ryska', code: 'ru-RU'},\r\n    {lang:'Finska', code: 'fi-FI'},\r\n    {lang:'Polska', code: 'pl-PL'},\r\n    {lang:'Isländska', code: 'is-IS'},\r\n  ];\r\n  recording = false;\r\n  anim = 'inactive';\r\n  //Input message\r\n  messageSub: Subscription;\r\n  message: string = '';\r\n  //Input message detected language\r\n  detectedLanguage: string = '';\r\n  detectedLanguageSub: Subscription;\r\n  //Translated input message\r\n  typeSub: Subscription;\r\n  typeMsg: string = '';\r\n  translateSub: Subscription;\r\n  translateMsg: string = '';\r\n  //Translated operator message\r\n  translatedOperatorSub: Subscription;\r\n  translatedOperatorMsg: string = '';\r\n  constructor(private vs: VoiceService, \r\n              private vts: VoiceTranslationService\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    this.messageSub = this.vs.messageChange.subscribe((value) => {\r\n      this.message += value;\r\n      this.vts.sendMessage(this.message);\r\n    });\r\n    this.translateSub = this.vts.translateMsgChange.subscribe((value) => {\r\n      this.translateMsg  = this.translateMsg + \" \" + value;\r\n      \r\n      //this.sayText(this.translateMsg);\r\n    });\r\n    this.typeSub = this.vts.typeChange.subscribe((value) => {\r\n      this.typeMsg = value;\r\n      console.log('typeSub', value);\r\n    });\r\n    this.detectedLanguageSub = this.vts.detectChange.subscribe((value)=> {\r\n      this.detectedLanguage = value.toLocaleUpperCase();\r\n      console.log(value);\r\n      this.vts.setLanguage(value);\r\n    })\r\n\r\n  }\r\n  test(event: any) {\r\n    console.log('dwadaw', event);\r\n  }\r\n  sayText(event: any) {\r\n    console.log('sayText');\r\n    if(event.srcElement.value !== undefined &&\r\n       event.srcElement.value !== null) {\r\n         let msg = event.srcElement.value;\r\n // här ska du läsa upp msg\r\n const speech = new Speech();\r\n speech.speak({\r\n   text: msg,\r\n   }).then(() => {\r\n   console.log(\"Success !\")\r\n   }).catch(e => {\r\n   console.error(\"An error occurred :\", e)\r\n   })\r\n       }\r\n   \r\n  }\r\n startListen(): void {\r\n    this.recording = true;\r\n    this.vs.start();\r\n  }\r\n  stopListen(): void {\r\n    this.recording = false;\r\n    this.vs.stop();\r\n  }\r\n  wordInput(event: any) {\r\n    this.vts.exec(event.srcElement.value);\r\n  }\r\n  wordInputText(msg) {\r\n    if(msg !== null && msg !== undefined ) {\r\n      this.vts.execText(msg.srcElement.value);\r\n    }\r\n  }\r\n  translateTo(event: any) {\r\n    this.vts.setLanguage(event.value);\r\n  }\r\n  translateFrom(lang: Language) {\r\n    this.vs.setLanguage(lang);\r\n  }\r\n  //Pause\r\n  async delay(ms: number) {\r\n    await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=>console.log(\"Pause for\", ms, \"ms\"));\r\n  }\r\n}\r\n","import { SpeechRecognitionService } from '@kamiazya/ngx-speech-recognition';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Language } from '../shared/language';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class VoiceService {\r\n    message = '';\r\n    isRecording = false;\r\n    language: Language = {lang: 'Svenska', code: 'sv-SE'};\r\n    messageChange: Subject<string> = new Subject<string>();\r\n    constructor(public ss: SpeechRecognitionService) {\r\n          this.ss.onresult = (e) => {\r\n            this.message = e.results[0].item(0).transcript;\r\n            this.messageChange.next(this.message);\r\n          };\r\n          this.ss.onaudiostart = (e) => {\r\n              console.log('hej');\r\n          }\r\n          this.ss.onend = (e) => {\r\n              if(this.isRecording){\r\n                this.start();\r\n              }\r\n        }\r\n    }\r\n    start() {\r\n        console.log('start', this.language);\r\n        this.isRecording = true;\r\n        this.ss.lang = this.language.code;\r\n        this.ss.start();\r\n    }\r\n    stop() {\r\n        this.isRecording = false;\r\n        if(this.message.length > 0) {\r\n            this.ss.stop();\r\n        } else {\r\n            setTimeout(() => {\r\n                this.stop();\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n    setLanguage(lang: Language) {\r\n        console.log(lang);\r\n        this.language = lang;\r\n    }\r\n}","import { Translator } from \"angular-translator\";\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { Language } from '../shared/language';\r\n\r\n@Injectable()\r\nexport class VoiceTranslationService {\r\n    message: string;\r\n    to: string;\r\n    from: string;\r\n    languageTo: string;\r\n    detectChange: Subject<string> = new Subject<string>();\r\n    translateMsgChange: Subject<string> = new Subject<string>();\r\n    typeChange: Subject<string> = new Subject<string>();\r\n    constructor(private httpClient: HttpClient) {\r\n\r\n    }\r\n    exec(msg: string) {\r\n        this.request(msg);\r\n    }\r\n    execText(msg: string) {\r\n        this.requestText(msg);\r\n    }\r\n    translate(message: string) {\r\n       \r\n        // kod för översättning från voice input\r\n    }\r\n\r\n    setLanguage(code: string) {\r\n        if(code.length < 3) {\r\n            this.languageTo = code;\r\n            return;\r\n        }\r\n        console.log(code);\r\n        switch(code) {\r\n            case 'sv-SE':\r\n                this.languageTo = 'sv';\r\n            break;\r\n            case 'en-GB': \r\n                this.languageTo = 'en';\r\n            break;\r\n            case 'de-DE': \r\n                this.languageTo = 'de';\r\n            break;\r\n            case 'fr-FR': \r\n                this.languageTo = 'fr';\r\n            break;\r\n            case 'af-ZA':\r\n                this.languageTo = 'af';\r\n            break;\r\n            case 'es-ES':\r\n                this.languageTo = 'es';\r\n            break;\r\n            case 'it-IT':\r\n                this.languageTo = 'it';\r\n            break;\r\n            case 'ru-RU':\r\n                this.languageTo = 'ru';\r\n            break;\r\n            case 'fi-FI':\r\n                this.languageTo = 'fi';\r\n            break;\r\n            case 'pl-PL':\r\n                this.languageTo = 'pl';\r\n            break;\r\n            case 'is-IS':\r\n                this.languageTo = 'is';\r\n            break;\r\n        }\r\n    }\r\n    sendMessage(msg: string) {\r\n        console.log('sendMessage');\r\n        this.request(msg);\r\n        \r\n    }\r\n    sendMessageText(msg: string) {\r\n        console.log('sendMessageText');\r\n        this.requestText(msg);\r\n        \r\n    }\r\n    request(msg: string) {\r\n        console.log(\"request\");\r\n        console.log(\"msg: \", msg);\r\n        this.httpClient.post<{message: string, to: string, from: string}>('http://localhost:3000/post-message', {message: msg, to:this.languageTo})\r\n        .subscribe((responsData)=> {\r\n            this.to = responsData.to;\r\n            this.from = responsData.from;\r\n            console.log('Input message:', msg);\r\n            console.log('Input languague:', this.from);\r\n            console.log('Output message', responsData.message);\r\n            console.log('Output language:', this.to);\r\n            // document.getElementById('detectedLanguage').innerText = this.from;\r\n            this.setMessage(responsData.message);\r\n            this.detectChange.next(this.from);\r\n        })\r\n    }\r\n    //Translate swe text to user language\r\n    requestText(msg: string) {\r\n        console.log(\"requestText\");\r\n        console.log(\"msg:\", msg);\r\n        // this.from = 'sv';\r\n        // this.languageTo = document.getElementById('detectedLanguage').innerText;\r\n        this.httpClient.post<{message: string, to: string, from: string}>('http://localhost:3000/post-message', {message: msg, to:this.languageTo})\r\n        .subscribe((responsData)=> {\r\n            this.to = responsData.to;\r\n            this.from = responsData.from;\r\n            console.log('Input message:', msg);\r\n            console.log('Input languague:', this.from);\r\n            console.log('Output message', responsData.message);\r\n            console.log('Output language:', this.to);\r\n            \r\n            this.typeChange.next(responsData.message);\r\n            // document.getElementById('textareaTranslatedI d').innerText = responsData.message;\r\n        })\r\n    }\r\n    setMessage(msg: string) {\r\n        this.translateMsgChange.next(msg);\r\n    }\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}