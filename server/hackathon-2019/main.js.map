{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/main/voice-service.ts","webpack:///./src/app/main/voice-translation-service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,qEAAqE,sD;;;;;;;;;;;;;;;;;ACA3B;AAO1C;IALA;QAME,UAAK,GAAG,eAAe,CAAC;IAC1B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAC2B;AACH;AAClB;AACO;AAC8I;AACrH;AACyB;AACjG,SAAS,iBAAiB,CAAC,IAAgB;IAChD,OAAO,IAAI,8EAAmB,CAAC,IAAI,CAAC,CAAC;AACvC,CAAC;AAsBD;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,gEAAc;gBACd,+DAAa;gBACb,uEAAa;gBACb,4FAAuB;gBACvB,iEAAe;gBACf,qEAAgB;gBAChB,mEAAiB;gBACjB,gEAAc;gBACd,oEAAkB;gBAClB,gEAAc;gBACd,iEAAe;aAChB;YACD,SAAS,EAAE,CAAC,yFAAwB,CAAC;YACrC,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACjCtB,8CAA8C,qBAAqB,8BAA8B,KAAK,yBAAyB,6BAA6B,+BAA+B,KAAK,+CAA+C,uhB;;;;;;;;;;;ACA/O,yRAAyR,gKAAgK,WAAW,iaAAia,4KAA4K,WAAW,4MAA4M,WAAW,68CAA68C,SAAS,gNAAgN,cAAc,mPAAmP,SAAS,qPAAqP,cAAc,62B;;;;;;;;;;;;;;;;;;;;;;;ACAp3G;AACH;AAChB;AACuC;AAG5B;AAIuC;AAyBjF;IAoBE,uBAAoB,EAAgB,EAChB,GAA4B;QAD5B,OAAE,GAAF,EAAE,CAAc;QAChB,QAAG,GAAH,GAAG,CAAyB;QApBhD,cAAS,GAAe;YACtB,EAAC,IAAI,EAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAC;YAC/B,EAAC,IAAI,EAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAC;YAChC,EAAC,IAAI,EAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAC;YAC7B,EAAC,IAAI,EAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAC;YAC/B,EAAC,IAAI,EAAC,WAAW,EAAE,IAAI,EAAE,OAAO,EAAC;YACjC,EAAC,IAAI,EAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAC;YAC/B,EAAC,IAAI,EAAC,YAAY,EAAE,IAAI,EAAE,OAAO,EAAC;YAClC,EAAC,IAAI,EAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAC;YAC7B,EAAC,IAAI,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAC;YAC9B,EAAC,IAAI,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAC;YAC9B,EAAC,IAAI,EAAC,WAAW,EAAE,IAAI,EAAE,OAAO,EAAC;SAClC,CAAC;QACF,cAAS,GAAG,KAAK,CAAC;QAClB,SAAI,GAAG,UAAU,CAAC;QAElB,YAAO,GAAW,EAAE,CAAC;QAErB,iBAAY,GAAW,EAAE,CAAC;IAGV,CAAC;IAEjB,gCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,KAAK;YACtD,KAAI,CAAC,OAAO,IAAI,KAAK,CAAC;YACtB,KAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,SAAS,CAAC,UAAC,KAAK;YAC9D,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAE1B,kCAAkC;QACpC,CAAC,CAAC;IACJ,CAAC;IACO,+BAAO,GAAf,UAAgB,GAAW;QACzB,0BAA0B;QAC1B,IAAM,MAAM,GAAG,IAAI,gDAAM,EAAE,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC;YACX,IAAI,EAAE,GAAG;SACR,CAAC,CAAC,IAAI,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC;YACV,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;IACN,CAAC;IACF,mCAAW,GAAX;QACG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;IAClB,CAAC;IACD,kCAAU,GAAV;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC;IACD,iCAAS,GAAT,UAAU,KAAU;QAClB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IACD,mCAAW,GAAX,UAAY,KAAU;QACpB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IACD,qCAAa,GAAb,UAAc,IAAc;QAC1B,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IACD,OAAO;IACD,6BAAK,GAAX,UAAY,EAAU;;;;4BACpB,qBAAM,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,cAAI,cAAO,EAAE,EAAT,CAAS,EAAE,EAAE,CAAC,EAA7B,CAA6B,CAAC,CAAC,IAAI,CAAC,cAAI,cAAO,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,EAAE,IAAI,CAAC,EAAlC,CAAkC,CAAC;;wBAAxG,SAAwG,CAAC;;;;;KAC1G;IAlEU,aAAa;QAvBzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;YAEpC,SAAS,EAAE,CAAC,2DAAY;gBACrB,kFAAuB;gBACtB,2FAA0B,CAAC;YAC/B,UAAU,EAAE;gBACV,mEAAO,CAAC,YAAY,EAAE;oBACpB,iEAAK,CAAC,QAAQ,EAAE,iEAAK,CAAC,EAErB,CAAC,CAAC;oBACH,iEAAK,CAAC,UAAU,EAAE,iEAAK,CAAC,EAEvB,CAAC,CAAC;oBACH,sEAAU,CAAC,qBAAqB,EAAE;wBAChC,mEAAO,CAAC,MAAM,CAAC;qBAChB,CAAC;iBACH,CAAC;aACH;;SACF,CAAC;+EAuBwB,2DAAY;YACX,kFAAuB;OArBrC,aAAa,CAmEzB;IAAD,oBAAC;CAAA;AAnEyB;;;;;;;;;;;;;;;;;;;;ACnCkD;AACjC;AACZ;AAQ/B;IAII,sBAAmB,EAA4B;QAA/C,iBAWC;QAXkB,OAAE,GAAF,EAAE,CAA0B;QAH/C,YAAO,GAAG,EAAE,CAAC;QACb,aAAQ,GAAa,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAC,CAAC;QACtD,kBAAa,GAAoB,IAAI,4CAAO,EAAU,CAAC;QAEjD,IAAI,CAAC,EAAE,CAAC,QAAQ,GAAG,UAAC,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YAC/C,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,YAAY,GAAG,UAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,UAAC,CAAC;YAChB,KAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;IACL,CAAC;IACD,4BAAK,GAAL;QACI,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IACD,2BAAI,GAAJ;QACI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;IACD,kCAAW,GAAX,UAAY,IAAc;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IA3BQ,YAAY;QADxB,gEAAU,EAAE;+EAKc,yFAAwB;OAJtC,YAAY,CA4BxB;IAAD,mBAAC;CAAA;AA5BwB;;;;;;;;;;;;;;;;;;;;ACTkB;AAEO;AACnB;AAI/B;IAMI,iCAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAF1C,eAAU,GAAW,IAAI,CAAC;QAC1B,uBAAkB,GAAoB,IAAI,4CAAO,EAAU,CAAC;IAG5D,CAAC;IACD,sCAAI,GAAJ,UAAK,GAAW;QACZ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC;IACD,2CAAS,GAAT,UAAU,OAAe;QAErB,wCAAwC;IAC5C,CAAC;IAED,6CAAW,GAAX,UAAY,QAAkB;QAC1B,QAAO,QAAQ,CAAC,IAAI,EAAE;YAClB,KAAK,OAAO;gBACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC3B,MAAM;YACN,KAAK,OAAO;gBACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC3B,MAAM;YACN,KAAK,OAAO;gBACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC3B,MAAM;YACN,KAAK,OAAO;gBACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC3B,MAAM;SACT;IACL,CAAC;IACD,6CAAW,GAAX,UAAY,GAAW;QACnB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAEtB,CAAC;IACD,yCAAO,GAAP,UAAQ,GAAW;QAAnB,iBAYC;QAXG,IAAI,CAAC,UAAU,CAAC,IAAI,CAA8C,oCAAoC,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,EAAE,EAAC,IAAI,CAAC,UAAU,EAAC,CAAC;aAC1I,SAAS,CAAC,UAAC,WAAW;YACnB,KAAI,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,CAAC;YACzB,KAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;YACnD,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAI,CAAC,EAAE,CAAC,CAAC;YAEzC,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CAAC;IACN,CAAC;IACD,4CAAU,GAAV,UAAW,GAAW;QAClB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IArDQ,uBAAuB;QADnC,gEAAU,EAAE;+EAOuB,+DAAU;OANjC,uBAAuB,CAwDnC;IAAD,8BAAC;CAAA;AAxDmC;;;;;;;;;;;;;ACRpC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<div class=\\\"container\\\" style=\\\"padding: 20px;\\\">\\r\\n  <app-main> </app-main>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'hackathon2019';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { MatCardModule, MatButtonModule, MatGridListModule, MatRadioGroup, MatRadioButton, MatRadioModule, MatExpansionModule, MatLabel, MatInputModule, MatSelectModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RxSpeechRecognitionService, SpeechRecognitionService } from '@kamiazya/ngx-speech-recognition';\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent\r\n  ],\r\n  imports: [\r\n    MatInputModule,\r\n    MatCardModule,  \r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    HttpClientModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatExpansionModule,\r\n    MatInputModule,\r\n    MatSelectModule   \r\n  ],\r\n  providers: [SpeechRecognitionService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\r\\n.left-div , .right-div {\\r\\n    padding:50px;\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\nmat-radio-group {\\r\\n    display: inline-flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksWUFBWTtJQUNaLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLG9CQUFvQjtJQUNwQixzQkFBc0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9tYWluL21haW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4ubGVmdC1kaXYgLCAucmlnaHQtZGl2IHtcclxuICAgIHBhZGRpbmc6NTBweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxubWF0LXJhZGlvLWdyb3VwIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"left-div\\\">\\r\\n      <mat-card>\\r\\n                  <mat-radio-group>\\r\\n                              <mat-label> Översätt från</mat-label>\\r\\n                              <br>\\r\\n                              <span *ngFor=\\\"let lang of languages; let i = index\\\"> \\r\\n                                    <mat-radio-button *ngIf=\\\"i == 0 || i == 1\\\"  [value]=\\\"lang.code\\\" (click)=\\\"translateFrom(lang)\\\">{{lang.lang}}</mat-radio-button>\\r\\n                     \\r\\n                              </span>\\r\\n                                 </mat-radio-group>\\r\\n      </mat-card>\\r\\n      \\r\\n      <br>\\r\\n      <mat-card>\\r\\n                  <mat-form-field>\\r\\n                              <mat-label> Översätt till</mat-label>\\r\\n                              <br>\\r\\n                              <mat-select style=\\\"width:100%;\\\" matNativeControl (selectionChange)=\\\"translateTo($event)\\\">\\r\\n                                    <mat-option *ngFor=\\\"let lang of languages\\\" [value]=\\\"lang.code\\\" >{{lang.lang}}</mat-option>\\r\\n                              </mat-select>\\r\\n                              <!--<mat-radio-button  *ngFor=\\\"let lang of languages\\\" [value]=\\\"lang.code\\\" (click)=\\\"translateTo(lang)\\\">{{lang.lang}}</mat-radio-button>-->\\r\\n                        </mat-form-field>\\r\\n      </mat-card>  \\r\\n      <br>\\r\\n      <mat-form-field style=\\\"width: 100%\\\">\\r\\n                  <input  matInput placeholder=\\\"Skriv ord\\\" (click)=\\\"wordInput($event)\\\" #wordinput >\\r\\n      </mat-form-field >\\r\\n\\r\\n<br>\\r\\n      <button style=\\\"padding:20px\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"recording\\\" (click)=\\\"startListen()\\\">Get Voice</button>\\r\\n      <button style=\\\"padding:20px\\\" mat-raised-button color=\\\"warn\\\"[disabled]=\\\"!recording\\\" (click)=\\\"stopListen()\\\">Stop Voice</button>\\r\\n      <button style=\\\"padding:20px\\\" mat-raised-button (click)=\\\"wordinput.click()\\\">Translate</button>\\r\\n<br>\\r\\n<br>\\r\\n      <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%\\\">\\r\\n                  <mat-label>Voice Input</mat-label>\\r\\n                  <input [value]=\\\"message\\\" matInput placeholder=\\\"Placeholder\\\">\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n      <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%\\\">\\r\\n                        <mat-label>Translated Output</mat-label>\\r\\n                        <input [value]=\\\"translateMsg\\\"matInput placeholder=\\\"Placeholder\\\">\\r\\n                      </mat-form-field>\\r\\n  \\r\\n<!--\\r\\n          <div class=\\\"container\\\">\\r\\n                 \\r\\n            <h5> Voice Input</h5>\\r\\n            <textarea class=\\\"form-control custom-control input-group\\\" rows=\\\"3\\\" style=\\\"resize:none\\\">{{message}}</textarea>\\r\\n            <div [@answerAnim]=\\\"anim\\\">\\r\\n            <h5> Translated Voice</h5>\\r\\n            <textarea class=\\\"form-control custom-control input-group\\\" rows=\\\"3\\\" style=\\\"resize:none\\\">{{translateMsg}}</textarea>\\r\\n            </div>\\r\\n      </div>\\r\\n   <p>Raw speech-to-text</p>\\r\\n      <div class=\\\"input-group\\\" id=\\\"textareaTranslated\\\">\\r\\n            <textarea class=\\\"form-control custom-control\\\" rows=\\\"3\\\" style=\\\"resize:none\\\">{{message}}</textarea>\\r\\n      </div>\\r\\n\\r\\n      <br>\\r\\n\\r\\n      <p>Translated speech</p>\\r\\n      <div class=\\\"input-group\\\" id=\\\"textareaTranslated\\\">\\r\\n            <textarea class=\\\"form-control custom-control\\\" rows=\\\"3\\\" style=\\\"resize:none\\\">{{translateMsg}}</textarea>\\r\\n      </div>\\r\\n      <p>Select translated language</p>\\r\\n     \\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"right-div\\\">\\r\\n\\r\\n      <p>Operator side</p>\\r\\n      <div class=\\\"input-group\\\" id=\\\"textareaOperator\\\">\\r\\n            <textarea class=\\\"form-control custom-control\\\" rows=\\\"3\\\" style=\\\"resize:none\\\">Placeholder</textarea>\\r\\n            <span class=\\\"input-group-addon btn btn-primary\\\" id=\\\"translateButton\\\" onclick=\\\"textTranslate()\\\">Translate</span>\\r\\n      </div>\\r\\n\\r\\n      <br>\\r\\n\\r\\n      <p>Translated text</p>\\r\\n      <div class=\\\"input-group\\\" id=\\\"textareaTranslated\\\">\\r\\n            <textarea class=\\\"form-control custom-control\\\" rows=\\\"3\\\" style=\\\"resize:none\\\"></textarea>\\r\\n            <span class=\\\"input-group-addon btn btn-primary\\\" id=\\\"synthesisSpeechButton\\\">Synthesis speech</span>\\r\\n      </div>\\r\\n\\r\\n</div>\\r\\n-->\\r\\n   \"","import { Component, OnInit } from '@angular/core';\r\nimport { VoiceService } from './voice-service';\r\nimport Speech from 'speak-tts';\r\nimport { VoiceTranslationService } from './voice-translation-service';\r\nimport {\r\n  RxSpeechRecognitionService\r\n} from '@kamiazya/ngx-speech-recognition';\r\nimport { Subscription } from 'rxjs';\r\nimport { Translator } from 'angular-translator';\r\nimport { Language } from '../shared/language';\r\nimport { trigger, style, state, animate, transition } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css'],\r\n  providers: [VoiceService,\r\n     VoiceTranslationService,\r\n      RxSpeechRecognitionService],\r\n  animations: [\r\n    trigger('answerAnim', [\r\n      state('active', style({\r\n\r\n      })),\r\n      state('inactive', style({\r\n\r\n      })),\r\n      transition('inactive <=> active', [\r\n        animate('0.2s')\r\n      ])\r\n    ])\r\n  ]\r\n})\r\n\r\n\r\nexport class MainComponent implements OnInit {\r\n  languages: Language[] = [\r\n    {lang:'Svenska', code: 'sv-SE'},\r\n    {lang:'Engelska', code: 'en-GB'},\r\n    {lang:'Tyska', code: 'de-DE'},\r\n    {lang:'Franska', code: 'fr-FR'},\r\n    {lang:'Afrikaans', code: 'af-ZA'},\r\n    {lang:'Spanska', code: 'es-ES'},\r\n    {lang:'Italienska', code: 'it-IT'},\r\n    {lang:'Ryska', code: 'ru-RU'},\r\n    {lang:'Finska', code: 'fi-FI'},\r\n    {lang:'Polska', code: 'pl-PL'},\r\n    {lang:'Isländska', code: 'is-IS'},\r\n  ];\r\n  recording = false;\r\n  anim = 'inactive';\r\n  messageSub: Subscription;\r\n  message: string = '';\r\n  translateSub: Subscription;\r\n  translateMsg: string = '';\r\n  constructor(private vs: VoiceService, \r\n              private vts: VoiceTranslationService\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    this.messageSub = this.vs.messageChange.subscribe((value) => {\r\n      this.message += value;\r\n      this.vts.sendMessage(this.message);\r\n    })\r\n    this.translateSub = this.vts.translateMsgChange.subscribe((value) => {\r\n      this.translateMsg = value;\r\n\r\n      //this.sayText(this.translateMsg);\r\n    })\r\n  }\r\n  private sayText(msg: string) {\r\n    // här ska du läsa upp msg\r\n    const speech = new Speech();\r\n    speech.speak({\r\n      text: msg,\r\n      }).then(() => {\r\n      console.log(\"Success !\")\r\n      }).catch(e => {\r\n      console.error(\"An error occurred :\", e)\r\n      })\r\n  }\r\n startListen(): void {\r\n    this.recording = true;\r\n    this.vs.start();\r\n  }\r\n  stopListen(): void {\r\n    this.recording = false;\r\n    this.vs.stop();\r\n  }\r\n  wordInput(event: any) {\r\n    this.vts.exec(event.srcElement.value);\r\n  }\r\n  translateTo(event: any) {\r\n    this.vts.setLanguage(event.value);\r\n  }\r\n  translateFrom(lang: Language) {\r\n    this.vs.setLanguage(lang);\r\n  }\r\n  //Pause\r\n  async delay(ms: number) {\r\n    await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=>console.log(\"Pause for\", ms, \"ms\"));\r\n  }\r\n}\r\n","import { SpeechRecognitionService } from '@kamiazya/ngx-speech-recognition';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Language } from '../shared/language';\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class VoiceService {\r\n    message = '';\r\n    language: Language = {lang: 'Svenska', code: 'sv-SE'};\r\n    messageChange: Subject<string> = new Subject<string>();\r\n    constructor(public ss: SpeechRecognitionService) {\r\n          this.ss.onresult = (e) => {\r\n            this.message = e.results[0].item(0).transcript;\r\n            this.messageChange.next(this.message);\r\n          };\r\n          this.ss.onaudiostart = (e) => {\r\n              console.log('hej');\r\n          }\r\n          this.ss.onend = (e) => {\r\n            this.start();\r\n        }\r\n    }\r\n    start() {\r\n        console.log('start', this.language);\r\n        this.ss.lang = this.language.code;\r\n        this.ss.start();\r\n    }\r\n    stop() {\r\n        this.ss.stop();\r\n    }\r\n    setLanguage(lang: Language) {\r\n        console.log(lang);\r\n        this.language = lang;\r\n    }\r\n}","import { Translator } from \"angular-translator\";\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { Language } from '../shared/language';\r\n\r\n@Injectable()\r\nexport class VoiceTranslationService {\r\n    message: string;\r\n    to: string;\r\n    from: string;\r\n    languageTo: string = 'fr';\r\n    translateMsgChange: Subject<string> = new Subject<string>();\r\n    constructor(private httpClient: HttpClient) {\r\n\r\n    }\r\n    exec(msg: string) {\r\n        this.request(msg);\r\n    }\r\n    translate(message: string) {\r\n       \r\n        // kod för översättning från voice input\r\n    }\r\n\r\n    setLanguage(language: Language) {\r\n        switch(language.code) {\r\n            case 'sv-SE':\r\n                this.languageTo = 'sv';\r\n            break;\r\n            case 'en-GB': \r\n                this.languageTo = 'en';\r\n            break;\r\n            case 'de-DE': \r\n                this.languageTo = 'de';\r\n            break;\r\n            case 'fr-FR': \r\n                this.languageTo = 'fr';\r\n            break;\r\n        }\r\n    }\r\n    sendMessage(msg: string) {\r\n        console.log('sendMessage');\r\n        this.request(msg);\r\n        \r\n    }\r\n    request(msg: string) {\r\n        this.httpClient.post<{message: string, to: string, from: string}>('http://localhost:3000/post-message', {message: msg, to:this.languageTo})\r\n        .subscribe((responsData)=> {\r\n            this.to = responsData.to;\r\n            this.from = responsData.from;\r\n            console.log('Input message:', msg);\r\n            console.log('Input languague:', this.from);\r\n            console.log('Output message', responsData.message);\r\n            console.log('Output language:', this.to);\r\n            \r\n            this.setMessage(responsData.message);\r\n        })\r\n    }\r\n    setMessage(msg: string) {\r\n        this.translateMsgChange.next(msg);\r\n    }\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}